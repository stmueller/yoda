<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.1.xsd">


     <global-method-security secured-annotations="enabled"/>
	<!-- enable use-expressions -->
	<http auto-config="true" use-expressions="false">
     
		<headers>
			<cache-control/>
		</headers>
         
         <intercept-url pattern="/images/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
         <intercept-url pattern="/js/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
         <intercept-url pattern="/css/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
         <intercept-url pattern="/login**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
         <intercept-url pattern="/register**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
         <intercept-url pattern="/appadmin/**" access="ROLE_APPADMIN"/>
         <intercept-url pattern="/admin/**" access="ROLE_APPADMIN,ROLE_ADMIN,ROLE_APPROVER"/>
         <intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY" />  
		

		<form-login login-page="/login.sp" default-target-url="/home.sp" always-use-default-target="true"
			authentication-failure-url="/login.sp?error=invalid" username-parameter="loginusername" 
			password-parameter="loginpassword" login-processing-url="/auth/login_check" />

		<logout logout-url="/logout.sp"  logout-success-url="/login.sp?logout" delete-cookies="JSESSIONID" invalidate-session="true"/>
		<access-denied-handler error-page="/403" />
	
		<csrf disabled="true"/> <!-- By default it is enabled -->
		
		<!-- Cross-Site Request Forgery (CSRF) is a type of attack that occurs when a 
		malicious web site, email, blog, instant message, or program causes a user's web browser to perform an unwanted 
		action on a trusted site for which the user is currently authenticated. -->
		
		
		<session-management invalid-session-url="">
         <concurrency-control max-sessions="1" expired-url="/login.sp?error=expired"/>
       </session-management>

	</http>
	
	

	<!-- Select users and user_roles from database -->
<!-- Select users and user_roles from database -->
	<authentication-manager>
		<authentication-provider>
			<password-encoder ref="encoder" />
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select email,password,enabled from tbl_users where email=?"
				authorities-by-username-query="select email,user_role from tbl_users where email=?" />
		</authentication-provider>
		<!-- <authentication-provider ref="rememberMeAuthenticationProvider"></authentication-provider> -->
	</authentication-manager>

	<!-- <beans:bean id="rememberMeAuthenticationProvider"
		class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<beans:property name="key" value="reservation" />
	</beans:bean> -->
  
     <!--  <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	  <beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
	  <beans:property name="url" value="jdbc:mysql://localhost:3306/easy_erp" />
	  <beans:property name="username" value="root" />
	  <beans:property name="password" value="root" /> 
	  </beans:bean> -->
    


	<beans:bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="10" />
	</beans:bean>

</beans:beans>